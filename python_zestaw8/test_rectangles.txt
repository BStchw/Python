import pytest
from rectangle import Rectangle# r1 = Rectangle(3, 4, 6, 8)
from point import Point

class TestRectangle():

    @pytest.fixture(scope="class")
    def rA(self):
        return Rectangle(3, 4, 6, 8)

    @pytest.fixture(scope="class")
    def rB(self):
        return Rectangle(3, 4, 5, 8)

    def test_print(self, rA):  # test str() i repr()
        assert str(rA) == "[(3, 4), (6, 8)]"
        assert repr(rA) == "Rectangle(3, 4, 6, 8)"

    def test_cmp(self, rA):
        assert (rA == Rectangle(3, 4, 6, 8)) == True
        assert (rA == Rectangle(3, 4, 7, 8)) == False
        assert (rA != Rectangle(3, 4, 7, 8)) == True

    def test_center(self):
        assert (Rectangle.center(Rectangle(0, 0, 4, 4)) == Point(2, 2))
        assert (Rectangle.center(Rectangle(7, 5, 10, 8)) == Point(8.5, 6.5))

    def test_area(self):
        assert (Rectangle.area(Rectangle(0, 0, 4, 4)) == 16)
        assert (Rectangle.area(Rectangle(7, 5, 10, 8)) == 9)

    def test_move(self):
        assert (Rectangle.move(Rectangle(0, 0, 4, 4), 1, 1) == Rectangle(1, 1, 5, 5))
        assert (Rectangle.move(Rectangle(6, 2, 9, 3), 45, 16) == Rectangle(51, 18, 54, 19))

    def test_intersection(self):
        assert (Rectangle.intersection(Rectangle(0, 0, 4, 4), Rectangle(2, 2, 5, 5)) == Rectangle(2, 2, 4, 4))
        assert (Rectangle.intersection(Rectangle(0, 0, 4, 4), Rectangle(2, -2, 5, 5)) == Rectangle(2, 0, 4, 4))
        assert (Rectangle.intersection(Rectangle(0, 0, 4, 4), Rectangle(2, 2, 5, 5)) == Rectangle(2, 2, 4, 4))
        assert (Rectangle.intersection(Rectangle(0, 0, 4, 4), Rectangle(1, 1, 3, 3)) == Rectangle(1, 1, 3, 3))

    def test_make4(self):
        assert(Rectangle.make4(Rectangle(0, 0, 4, 4)) == (Rectangle(0, 0, 2, 2), Rectangle(0, 2, 2, 4), Rectangle(2, 2, 4, 4), Rectangle(2, 0, 4, 2)))
